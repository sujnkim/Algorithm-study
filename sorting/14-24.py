"""
[ch14.sorting] 14-24: 안테나 | 난이도1 | 2019sw마에스트로입학테스트
문제 링크: https://www.acmicpc.net/problem/18310
INPUT: 집의 개수n, 집의 위치 정보
    * 첫째 줄에 집의 개수 n ( 1<=n<=200,000)
    * 둘째 줄에 공백으로 구분된 n개의 집 위치 (1이상 100,000이하의 자연수)
OUTPUT: 안테나를 설치할 위치의 값 ( 여러 개일 경우 중 가장 작은 값 )
"""

#input
"""
n = int(input())
data = list(map(int, input().split()))
"""
n = 4
data = [5, 1, 7, 9]


#solve
"""
data.sort()
temp = []
for i in range(n):
    sum = 0
    for j in range(n):
        sum += abs(data[i] - data[j])
    temp.append((sum, data[i]))

temp.sort()

#output
print(temp[0][1])
"""

"""
[문제 구상]
모든 거리를 계산해서 더하는 방식은 시간 초과가 발생...
다른 방법을 생각해봐야 할 듯

예시의 경우를 계산해보면, 아래와 같은 값이 나오는데
1 -> 4+6+8=18
5 -> 4+2+4=10
7 -> 6+2+2=10
9 -> 8+4+2=14
끝 부분이 아니라 중간 부분에 있는 집을 선택할수록 값이 작아짐


+ 책 설명 추가)
핵심 아이디어: 중간값에 해당하는 위치의 집에 안테나를 설치해야 모든 집까지 거리가 최소가 됨
중간값에서 벗어나는 위치에 안테나를 설치하는 경우, 안테나로부터 모든 집까지 거리의 총합이 점점 증가

-> 모든 집의 위치를 입력받은 뒤 정렬 후, 중간값을 출력하면 됨
"""

data.sort()

#output
print(data[(n-1)//2])